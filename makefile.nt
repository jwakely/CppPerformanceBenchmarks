#
#    Copyright 2007-2009 Adobe Systems Incorporated
#    Copyright 2018 Chris Cox
#    Distributed under the MIT License (see accompanying file LICENSE_1_0_0.txt
#    or a copy at http://stlab.adobe.com/licenses.html )
#

###################################################
#
# Makefile for C++ benchmarks
#  This is a Windows specific makefile derived from makefile
#
###################################################



# Microsoft compiler
#CC = cl
#CPP = cl


# Intel compiler
#CC = icl
#CPP = icl


# GCC
#CC = gcc -mwindows
#CPP = g++ -mwindows




# don't show a logo each time, full optimization, define WIN32 and NDEBUG
CFLAGS = /nologo /Ox /D "WIN32" /D "NDEBUG" /I "$(INCLUDE)"
# same as above, forcing C++ and normal exception handling
CPPFLAGS = /nologo /Ox /TP /EHsc /D "WIN32" /D "NDEBUG" /I "$(INCLUDE)"




#
# our target programs
#

BINARIES = machine.exe \
stepanov_abstraction.exe \
stepanov_vector.exe \
loop_unroll.exe \
simple_types_loop_invariant.exe \
functionobjects.exe \
simple_types_constant_folding.exe \
atol.exe \
ctype.exe \
scalar_replacement_arrays.exe \
scalar_replacement_array_reduction.exe \
scalar_replacement_structs.exe \
byte_order.exe \
exceptions.exe \
exceptions_cpp.exe \
mathlib.exe \
shift.exe



#
# Build rules
#

all : $(BINARIES)


SUFFIXES:
.SUFFIXES: .c .cpp


# declare some targets to be fakes without real dependencies

.PHONY : clean dependencies

# remove all the stuff we build

clean : 
		del -f *.o *.obj $(BINARIES)


#
# special case compiles
#

exceptions_cpp.exe : exceptions.c
	$(CPP) $(CPPFLAGS) /D "TEST_WITH_EXCEPTIONS=1" -o exceptions_cpp.exe exceptions.c



#
# Run the benchmarks and generate a report
#
REPORT_FILE = report.txt

report:  $(BINARIES)
	@echo "##STARTING Version 1.0" > $(REPORT_FILE)
	@echo %%DATE%% %%TIME%% >>$(REPORT_FILE)
	@echo "##CFlags: $(CFLAGS)" >> $(REPORT_FILE)
	@echo "##CPPFlags: $(CPPFLAGS)" >> $(REPORT_FILE)
	.\machine >> $(REPORT_FILE)
	.\stepanov_abstraction >> $(REPORT_FILE)
	.\stepanov_vector >> $(REPORT_FILE)
	.\functionobjects >> $(REPORT_FILE)
	.\simple_types_constant_folding >> $(REPORT_FILE)
	.\simple_types_loop_invariant >> $(REPORT_FILE)
	.\loop_unroll >> $(REPORT_FILE)
	.\atol >> $(REPORT_FILE)
	.\ctype >> $(REPORT_FILE)
	.\scalar_replacement_arrays >> $(REPORT_FILE)
	.\scalar_replacement_array_reduction >> $(REPORT_FILE)
	.\scalar_replacement_structs  >> $(REPORT_FILE)
	.\byte_order >> $(REPORT_FILE)
	.\exceptions >> $(REPORT_FILE)
	.\exceptions_cpp >> $(REPORT_FILE)
	.\mathlib >> $(REPORT_FILE)
	.\shift >> $(REPORT_FILE)
	@echo %%DATE%% %%TIME%% >>$(REPORT_FILE)
	@echo "##END Version 1.0" >> $(REPORT_FILE)

